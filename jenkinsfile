pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = "appi12/jeeva" // Replace with your Docker Hub repository name
        DOCKER_IMAGE = "${DOCKER_HUB_REPO}:${env.BUILD_NUMBER}" // Docker image tag using BUILD_NUMBER
        KUBERNETES_DEPLOYMENT = "my-nodejs-app-deployment"
        KUBERNETES_NAMESPACE = "default"
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Fetching code from GitHub...'
                checkout([$class: 'GitSCM',
                    branches: [[name: '*/main']], // Replace 'main' with your branch name
                    userRemoteConfigs: [[
                        url: 'https://github.com/jeevan-sysadmin/CICD.git', // Replace with your repo URL
                        credentialsId: 'b38f3c3c-bbdf-4543-86f7-9197ac9117e1' // Replace with your Jenkins GitHub credentials ID
                    ]]
                ])
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                script {
                    // Build the Docker image and tag it with BUILD_NUMBER
                    docker.build("${DOCKER_IMAGE}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image to Docker Hub...'
                script {
                    // Push the image to Docker Hub using the correct tag
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                        docker.image("${DOCKER_IMAGE}").push() // Use DOCKER_IMAGE with the correct tag
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                echo 'Deploying to Kubernetes...'
                script {
                    // Ensure kubectl is installed and configured
                    // If you're using Minikube or other environments, specify the KUBECONFIG path if necessary
                    // Example for Minikube:
                    // KUBECONFIG=~/.kube/config

                    // Apply deployment.yaml to Kubernetes
                    sh '''
                    echo "Applying deployment..."
                    kubectl apply -f deployment.yaml
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs for details.'
        }
    }
}
